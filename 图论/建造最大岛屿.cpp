#include <iostream>
#include <vector>

using namespace std;

/*
 题目描述：
给定一个由 1（陆地）和 0（水）组成的矩阵，你最多可以将矩阵中的一格水变为一块陆地，在执行了此操作之后，矩阵中最大的岛屿面积是多少。

岛屿面积的计算方式为组成岛屿的陆地的总数。岛屿是被水包围，并且通过水平方向或垂直方向上相邻的陆地连接而成的。你可以假设矩阵外均被水包围。

输入描述：

第一行包含两个整数 N, M，表示矩阵的行数和列数。之后 N 行，每行包含 M 个数字，数字为 1 或者 0，表示岛屿的单元格。

输出描述：

输出一个整数，表示最大的岛屿面积。
 */

/*
 解题思路：
 1.先统计所有岛屿的面积大小
 2.然后统计所有为0的节点周围的岛屿面积之和，取最大
 */

int n,m;
int MaxArea = -1;
int dir[4][2]{-1,0,0,-1,1,0,0,1};
void dfs(vector<vector<int>>& grid,vector<vector<bool>>& visited,int x,int y) {

}

int main() {

}